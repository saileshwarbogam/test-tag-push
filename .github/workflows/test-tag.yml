name: Public Beta Release

on:
  push:
    tags: '*.*.*b*'

permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout source code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v2
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine

      - name: Resolve Branch for the Tagged Commit
        id: resolve-branch
        run: |
          # Get the commit associated with the tag
          TAG_COMMIT=$(git rev-list -n 1 ${{ github.ref_name }})

          # Find the branch containing this commit
          BRANCH_NAME=$(git branch -r --contains $TAG_COMMIT | grep -o 'origin/.*' | sed 's|origin/||' | head -n 1)

          if [ -z "$BRANCH_NAME" ]; then
            echo "Error: Could not resolve branch for the tag."
            exit 1
          fi

          echo "Resolved Branch Name: $BRANCH_NAME"
          echo "branch_name=$BRANCH_NAME" >> $GITHUB_ENV

      - name: Debug Resolved Branch
        run: |
          echo "Branch Name: ${{ env.branch_name }}"

      - name: Get Previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        with:
          fallback: 1.0.0

      - name: Bump Version
        run: |
          chmod +x ./bump_version.sh
          ./bump_version.sh "${{ steps.previoustag.outputs.tag }}"

      - name: Commit Changes
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor }}@users.noreply.github.com"

          # Checkout the resolved branch
          git checkout ${{ env.branch_name }}

          # Add and commit the updated files
          git add setup.py
          git commit -m "Update version for tag ${{ github.ref_name }}"

          # Push changes back to the branch
          git push origin ${{ env.branch_name }}

      - name: Build and publish
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_PUBLISH_TOKEN }}
        run: |
          python setup.py sdist bdist_wheel
          twine upload dist/*
